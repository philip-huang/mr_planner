<?xml version="1.0"?>
<launch>
    <!-- Gazebo options -->
    <arg name="ns" default="/"/>
    <arg name="use_rviz" default="true"/>
    <arg name="task" default="tower"/>
    <arg name="mfi" default="false" />
    <arg name="async" default="false" />
    <arg name="load_tpg" default="false" />
    <arg name="load_adg" default="false" />
    <arg name="shortcut_time" default="1.0" />
    <arg name="tight_shortcut" default="false" />
    <arg name="progress_file" default="$(find mr_planner)/outputs/lego/$(arg task)/progress.csv" />
    <arg name="seed" default="1" />
    <arg name="vmax" default="2.0" />
    <arg name="planner" default="PrioritizedPlanning" />
    <arg name="benchmark" default="false"/>
    <arg name="fake_move" default="false"/>

    <!-- Workaround on wsl for opengl rendering issue -->
    <env name="LIBGL_ALWAYS_SOFTWARE" value="1"/>

    <!-- Start the robot state publisher, simulation, and controler -->
    <!-- <include file="$(find dual_gp4_moveit_config)/launch/demo_gazebo.launch">
    </include> -->

    <group ns="$(arg ns)">
        <include file="$(find dual_gp4_moveit_config)/launch/demo.launch">
            <arg name="use_rviz" value="$(arg use_rviz)" />
        </include>

        <!-- Run the main MoveIt executable with trajectory execution -->
        <!-- <include file="$(find dual_gp4_moveit_config)/launch/move_group.launch">
            <arg name="allow_trajectory_execution" value="false" />
            <arg name="moveit_controller_manager" value="fake" />
            <arg name="info" value="true" />
            <arg name="pipeline" value="ompl" />
            <arg name="load_robot_description" value="true" />
        </include> -->

        <!-- Start moveit_rviz with the motion planning plugin -->
        <!-- <include file="$(find dual_gp4_moveit_config)/launch/moveit_rviz.launch">
            <arg name="rviz_config" value="$(find dual_gp4_moveit_config)/launch/moveit.rviz" />
        </include> -->

        <!-- Start the planning node -->
        
        <node name="lego_node" pkg="mr_planner" type="lego_node" output="screen" required="true">
            <param name="fullorder_targets_filename" value="$(find mr_planner)/assembly_steps/$(arg task).csv" />
            <param name="planner_type" value="$(arg planner)"/>
            <param name="config_fname" value="$(find lego_manipulation)/config/user_config_$(arg task).json"/>
            <param name="root_pwd" value="$(find lego_manipulation)/"/>
            <param name="output_dir" value="$(find mr_planner)/outputs/lego/$(arg task)"/>
            <param name="group_name_0" value="/left_arm" />
            <param name="group_name_1" value="/right_arm" />
            <param name="mfi" value="$(arg mfi)" />
            <param name="async" value="$(arg async)" />
            <param name="load_tpg" value="$(arg load_tpg)" />
            <param name="load_adg" value="$(arg load_adg)" />
            <param name="shortcut_time" value="$(arg shortcut_time)" />
            <param name="tight_shortcut" value="$(arg tight_shortcut)" />
            <param name="progress_file" value="$(arg progress_file)" />
            <param name="seed" value="$(arg seed)" />
            <param name="vmax" value="$(arg vmax)" />
            <param name="benchmark" value="$(arg benchmark)" />
            <param name="fake_move" value="$(arg fake_move)" />
        </node>
        
        <node name="left_arm" pkg="mr_planner" type="yk_robot" output="screen" if="$(arg async)">
            <param name="group_name" value="left_arm" />
        </node>

        <node name="right_arm" pkg="mr_planner" type="yk_robot" output="screen" if="$(arg async)">
            <param name="group_name" value="right_arm" />
        </node>
    </group>


</launch>